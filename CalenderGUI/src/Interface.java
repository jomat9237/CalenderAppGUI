import javax.swing.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jtmat
 */
public class Interface extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public static int MonthNameToNum(String month){
        //CONVERTS STRING MONTH INPUT INTO INT VAL
        String [] monthsName = new String [12];
        int monthNum = 0;
        monthsName[0] = "january";
        monthsName[1] = "febuary";
        monthsName[2] = "march";        
        monthsName[3] = "april";
        monthsName[4] = "may";
        monthsName[5] = "june";
        monthsName[6] = "july";
        monthsName[7] = "august";
        monthsName[8] = "september";
        monthsName[9] = "october";
        monthsName[10] = "november";
        monthsName[11] = "december";
        if(month.equalsIgnoreCase(monthsName[0])){
            monthNum = 0;
        }else if(month.equalsIgnoreCase(monthsName[1])){
            monthNum = 1;
        }else if(month.equalsIgnoreCase(monthsName[2])){
            monthNum = 2;
        }else if(month.equalsIgnoreCase(monthsName[3])){
            monthNum = 3;
        }else if(month.equalsIgnoreCase(monthsName[4])){
            monthNum = 4;
        }else if(month.equalsIgnoreCase(monthsName[5])){
            monthNum = 5;
        }else if(month.equalsIgnoreCase(monthsName[6])){
            monthNum = 6;
        }else if(month.equalsIgnoreCase(monthsName[7])){
            monthNum = 7;
        }else if(month.equalsIgnoreCase(monthsName[8])){
            monthNum = 8;
        }else if(month.equalsIgnoreCase(monthsName[9])){
            monthNum = 9;
        }else if(month.equalsIgnoreCase(monthsName[10])){
            monthNum = 10;
        }else if(month.equalsIgnoreCase(monthsName[11])){
            monthNum = 11;
        }                                                              
        return(monthNum);        
                
    }
    public static int ExtraDay(int year){
        //determines if there is an extra day in a year
        int ExtraDay; 
        if(year%100 == 0 && year%400 == 0){
            ExtraDay = 1;
        }else if(year%100 == 0){
            ExtraDay = 0;
        }else if(year%4 == 0){
            ExtraDay = 1;
        }else{
            ExtraDay = 0;
        }
        return(ExtraDay);
    }

    public static int centuryCode(int year){
        //Century code for day of week equation
        int [] centuryCodeArray = new int[6];
        int centOrder;
        int yearThouds;
        int yearHund;
        int centuryCode;
        yearThouds = year / 1000;
        yearHund = (year - (yearThouds*1000)) / 100;
    
        centOrder = (yearHund + (yearThouds*10))-17;
        
        
        
        centuryCodeArray[0] = 4;
        centuryCodeArray[1] = 2;
        centuryCodeArray[2] = 0;
        centuryCodeArray[3] = 6;
        centuryCodeArray[4] = 4;
        centuryCodeArray[5] = 2;
        
        
        centuryCode = centuryCodeArray[centOrder];
        
        return centuryCode;
    }
    public static int yearCode(int year){
       //finds year code
       int yearCode;
       int yearThouds;
       int yearHund;
       int yearTenOne;       
       yearThouds = year / 1000;
       yearHund = (year - (yearThouds*1000)) / 100;
       yearTenOne = year - ((yearHund*100) + (yearThouds*1000));
       yearCode = (yearTenOne + (yearTenOne/4))%7;
       return yearCode;
    }
    
    public static int monthCode(int monthNum){
        //finds month code
        int [] monthCode = new int [12];
        int monthCodeInt;
        monthCode[0] = 0;
        monthCode[1] = 3;
        monthCode[2] = 3;
        monthCode[3] = 6;
        monthCode[4] = 1;
        monthCode[5] = 4;
        monthCode[6] = 6;
        monthCode[7] = 2;
        monthCode[8] = 5;
        monthCode[9] = 0;
        monthCode[10] = 3;
        monthCode[11] = 5;
        monthCodeInt = monthCode[monthNum];
        return monthCodeInt;
                
    }
    
    public static String DayOfWeek(int DayNumber){
        //takes the final number from the day of week equation and converts to day of week
        String [] WeekDays = new String [7];
        String DayOfWeek;
        
        
        
        WeekDays[0] = "Sunday";
        WeekDays[1] = "Monday";
        WeekDays[2] = "Tuesday";
        WeekDays[3] = "Wednesday";
        WeekDays[4] = "Thursday";
        WeekDays[5] = "Friday";
        WeekDays[6] = "Saturday";
        DayOfWeek = WeekDays[DayNumber];
        return DayOfWeek;
    }
    
    public static int DayNumber(int centCode, int monthCode, int yearCode, int day, int leap){
        //takes all the codes and does equation to get number which correspondes to a day of week
        int DayNumber;
        DayNumber = (yearCode + monthCode + centCode + day - leap)%7;
        return DayNumber;
    }
    
    public static int leapMonth(int year, String month){
        //determines if there is an extra day in the 
        int leap = 0;
        if(month.equalsIgnoreCase("january") || month.equalsIgnoreCase("febuary")){
        if(year%100 == 0 && year%400 == 0){
            leap = 1;
        }else if(year%100 == 0){
            leap = 0;
        }else if(year%4 == 0){
            leap = 1;
        }else{
            leap = 0;
        }
        }       
        return leap;
    }
    
    public static int DaysUntil(int monthNumber, int monthNumberTWO, int yearONE, int yearTWO, int dayONE, int dayTWO){
        int [] months = new int [12];
        
        int TotalDays = 0;
        int monthCounter = monthNumber;
        int MonthsINT;
        int ExtraDay = 0;
        int yearExtra = yearONE;
        
        months[0] = 31;
        months[1] = 28;
        months[2] = 31;
        months[3] = 30;
        months[4] = 31;
        months[5] = 30;
        months[6] = 31;
        months[7] = 31;
        months[8] = 30;
        months[9] = 31;
        months[10] = 30;
        months[11] = 31;
        
        if (monthNumber >= 1){
            yearExtra = yearONE + 1;
        }
        System.out.println("YEARS ="+  yearONE + " "+ yearExtra);
       
        for(int i = yearONE; i <= yearTWO; i = i +1){
            if(ExtraDay(i) == 1){
                ExtraDay = ExtraDay + 1;
            }
        }
        System.out.println("ExtraDay = " + ExtraDay);
        System.out.println("Months " + monthNumber + monthNumberTWO);
        MonthsINT = ((yearTWO-yearONE)*12) + monthNumberTWO - monthNumber;
        System.out.println(MonthsINT);
        
        for(int i = 0; i <= MonthsINT; i++){
            if(monthCounter > 11){
                monthCounter = 0;
            }
            TotalDays = months[monthCounter] + TotalDays; 
           
            
            monthCounter ++;
        }
        
        System.out.println(TotalDays);
        TotalDays = TotalDays - dayONE;
        TotalDays = TotalDays - (months[monthNumberTWO] - dayTWO);
        TotalDays = TotalDays + ExtraDay;
        
        return TotalDays;
    }
    
    
        
    public static int weekdays(int TotalDays, int dayOweek1, int dayOweek2){
        //days/5  
        int weekdays;
        int [] weekdaysleft = new int [7];
        
        
        
        weekdaysleft[0] = 5;
        weekdaysleft[1] = 4;
        weekdaysleft[2] = 3;
        weekdaysleft[3] = 2;
        weekdaysleft[4] = 1;
        weekdaysleft[5] = 0;
        weekdaysleft[6] = 0;
        
        weekdays = (TotalDays - TotalDays/5) + weekdaysleft[dayOweek1-1] + weekdaysleft[dayOweek2-1];

        return weekdays;
    }   


     public Interface() {
        initComponents();
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        TITLE = new javax.swing.JLabel();
        DAYOFWEEKOUT = new javax.swing.JButton();
        DaysInbetweenOut = new javax.swing.JButton();
        OutputLbl2 = new javax.swing.JLabel();
        OutputLbl1 = new javax.swing.JLabel();
        YEARBOX2 = new javax.swing.JTextField();
        DAYBOX1 = new javax.swing.JComboBox<>();
        MONTHBOX1 = new javax.swing.JComboBox<>();
        YEARBOX1 = new javax.swing.JTextField();
        MONTHBOX2 = new javax.swing.JComboBox<>();
        DAYBOX2 = new javax.swing.JComboBox<>();
        YEARBOX3 = new javax.swing.JTextField();
        MONTHBOX3 = new javax.swing.JComboBox<>();
        DAYBOX3 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TITLE.setFont(new java.awt.Font("Trajan Pro", 0, 24)); // NOI18N
        TITLE.setText("The Calender App");

        DAYOFWEEKOUT.setText("The day of the week is");
        DAYOFWEEKOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAYOFWEEKOUTActionPerformed(evt);
            }
        });

        DaysInbetweenOut.setText("Days until...");
        DaysInbetweenOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DaysInbetweenOutActionPerformed(evt);
            }
        });

        OutputLbl2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N

        OutputLbl1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 14)); // NOI18N

        YEARBOX2.setText("YEAR");

        DAYBOX1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        MONTHBOX1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MONTH", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        MONTHBOX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MONTHBOX1ActionPerformed(evt);
            }
        });

        YEARBOX1.setText("YEAR");
        YEARBOX1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YEARBOX1ActionPerformed(evt);
            }
        });

        MONTHBOX2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MONTH", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        DAYBOX2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        YEARBOX3.setText("YEAR");

        MONTHBOX3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MONTH", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        DAYBOX3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DAYBOX3.setBorder(null);
        DAYBOX3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel2.setText("Start date:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel4.setText("End date:");

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 18)); // NOI18N
        jLabel1.setText("ENTER ANY DATE TO FIND OUT THE DAY OF THE WEEK");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(TITLE, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(MONTHBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(DAYBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(YEARBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(DAYOFWEEKOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(YEARBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MONTHBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DAYBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(116, 116, 116)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(YEARBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MONTHBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DAYBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DaysInbetweenOut, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(OutputLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OutputLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(TITLE)
                .addGap(124, 124, 124)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MONTHBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAYBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YEARBOX1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(DAYOFWEEKOUT)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YEARBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MONTHBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAYBOX2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YEARBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MONTHBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DAYBOX3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DaysInbetweenOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DAYOFWEEKOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAYOFWEEKOUTActionPerformed
        int year;
        int day;
        String month;
        int monthNum;
        int DayNumber;
        String DayOfWeek;
        
        //System.out.println("Enter the year: ");
        year = Integer.parseInt(YEARBOX1.getText());
        System.out.println(year);
        //System.out.println("Enter the month: ");
        month = (String) MONTHBOX1.getSelectedItem(); 
        System.out.println(month);
        monthNum = MonthNameToNum(month);
        
        //System.out.println("Enter the day of the month: ");
        day = Integer.parseInt((String) DAYBOX1.getSelectedItem());
        System.out.println(day);
        //OUTPUT FOR TROUBLESHOOTING
        //System.out.println("cent" + centuryCode(year) + "month" + monthCode(monthNum)+ "monthNUm" + monthNum+ "year" + yearCode(year) + "day" + day + "+/-" + leapMonth(year, month));
        
        DayNumber = DayNumber(centuryCode(year), monthCode(monthNum), yearCode(year), day, leapMonth(year, month));
        
        DayOfWeek = DayOfWeek(DayNumber);
        OutputLbl1.setText(DayOfWeek);
        //System.out.println("The day of the week on that date is: " + DayOfWeek);
                
    }//GEN-LAST:event_DAYOFWEEKOUTActionPerformed

    
    private void DaysInbetweenOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DaysInbetweenOutActionPerformed
        int year1;
        int day1;
        String month1;
        int monthNum1;
        int year2;
        int day2;
        String month2;
        int monthNum2;
        int TotalDays;    
        int weekdays;
        double weekends;
        int dayNumber1;
        int dayNumber2;
        
        
        year1 = Integer.parseInt(YEARBOX2.getText());
        month1 = (String) MONTHBOX2.getSelectedItem(); 
        monthNum1 = MonthNameToNum(month1);
        day1 = Integer.parseInt((String) DAYBOX2.getSelectedItem());
        
        
        year2 = Integer.parseInt(YEARBOX3.getText());
        month2 = (String) MONTHBOX3.getSelectedItem(); 
        monthNum2 = MonthNameToNum(month2);
        day2 = Integer.parseInt((String) DAYBOX3.getSelectedItem());
        
        
        TotalDays = DaysUntil(monthNum1, monthNum2, year1, year2, day1, day2);
        
        dayNumber1 = DayNumber(centuryCode(year1), monthCode(monthNum1), yearCode(year1), day1, leapMonth(year1, month1)); 
        dayNumber2 = DayNumber(centuryCode(year2), monthCode(monthNum2), yearCode(year2), day2, leapMonth(year2, month2)); 
        weekdays = weekdays(TotalDays, dayNumber1, dayNumber2);
        weekends = (TotalDays-weekdays)/2;
        System.out.println("TotalDays + \" between the two dates with \" + weekdays + \" weekdays and \" + weekends");
        OutputLbl2.setText(TotalDays + " between the two dates with " + weekdays + " weekdays and " + weekends + " weekends!");
    }//GEN-LAST:event_DaysInbetweenOutActionPerformed

    private void MONTHBOX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MONTHBOX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MONTHBOX1ActionPerformed

    private void YEARBOX1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YEARBOX1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YEARBOX1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try { 
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel"); 

           } catch (Exception e) { 
            e.printStackTrace(); 
           }
         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DAYBOX1;
    private javax.swing.JComboBox<String> DAYBOX2;
    private javax.swing.JComboBox<String> DAYBOX3;
    private javax.swing.JButton DAYOFWEEKOUT;
    private javax.swing.JButton DaysInbetweenOut;
    private javax.swing.JComboBox<String> MONTHBOX1;
    private javax.swing.JComboBox<String> MONTHBOX2;
    private javax.swing.JComboBox<String> MONTHBOX3;
    private javax.swing.JLabel OutputLbl1;
    private javax.swing.JLabel OutputLbl2;
    private javax.swing.JLabel TITLE;
    private javax.swing.JTextField YEARBOX1;
    private javax.swing.JTextField YEARBOX2;
    private javax.swing.JTextField YEARBOX3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
